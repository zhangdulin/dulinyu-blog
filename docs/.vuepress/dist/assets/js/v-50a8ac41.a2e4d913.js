(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1123],{8770:(a,e,n)=>{"use strict";n.r(e),n.d(e,{data:()=>s});const s={key:"v-50a8ac41",path:"/javaScript/wx/%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"wx 小程序",slug:"wx-小程序",children:[]}],filePathRelative:"javaScript/wx/遇到的一些坑.md",git:{updatedTime:1663811863e3,contributors:[{name:"zhangyu2207",email:"zhangyu2207@yundasys.com",commits:1}]}}},2044:(a,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>r});var s=n(6252);const t=(0,s.uE)('<h3 id="wx-小程序" tabindex="-1"><a class="header-anchor" href="#wx-小程序" aria-hidden="true">#</a> wx 小程序</h3><h4 id="canvas绘制海报" tabindex="-1"><a class="header-anchor" href="#canvas绘制海报" aria-hidden="true">#</a> canvas绘制海报</h4><h4 id="为什么在canvas上画图片模糊" tabindex="-1"><a class="header-anchor" href="#为什么在canvas上画图片模糊" aria-hidden="true">#</a> 为什么在canvas上画图片模糊？</h4><p>在canvas上绘制图片/文字的时候，我们设定canvas：375*667的宽高，会发现绘制出来的图片很模糊，感觉像是一张分辨率很差的图片，文字看起来也会有叠影。</p><p>注意：物理像素是指手机屏幕上显示的最小单元，而设备独立像素（逻辑像素）计算机设备中的一个点，css 中设置的像素指的就是该像素。</p><p>原因：在前端开发中我们知道一个属性叫devicePixelRatio（设备像素比），该属性决定了在渲染界面时会用几个（通常是2个）物理像素来渲染一个设备独立像素。 举个例，一张100*100像素大小的图片，在retina屏幕下，会用2个像素点去渲染图片的一个像素点，相当于图片放大了一倍，因此图片会变得模糊，这也是1px在retina 屏上变粗的原因。</p><p>解决： 将canvas-width和canvas-height都放大2倍，在通过style将canvas的显示width,height缩小2 倍. 例如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;canvas width=&quot;320&quot; height=&quot;180&quot; style=&quot;width:160px;height:90px;&quot;&gt;&lt;/canvas&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="如何处理px和rpx的转换" tabindex="-1"><a class="header-anchor" href="#如何处理px和rpx的转换" aria-hidden="true">#</a> 如何处理px和rpx的转换？</h4><p>rpx是小程序里特有的尺寸单位，可以根据屏幕的宽度进行自适应，而在iphone6/iphonex上，1rpx等于不同的px。所以很可能会导致在不同手机下，你的canvas展示不一致。 在绘制海报的之前，我们拿到的设计稿一般都是基于iphone6的2倍图。而且从上一个问题的解决，我们知道canvas的大小也是2倍的，所以我们可以直接量取2倍图的设计稿直接绘制canvas，而尺寸需要注意一下rpxtoPx.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/**\n   * \n   * @param {*} rpx \n   * @param {*} int  //是否变成整数\n   factor =&gt; 0.5 //iphone6\n   pixelRatio =&gt; 2 像素比\n   */\ntoPx(rpx, int) {\n    if (int) {\n      return parseInt(rpx * this.factor * this.pixelRatio)\n    }\n    return rpx * this.factor * this.pixelRatio\n  }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="json-stringify-json-parse" tabindex="-1"><a class="header-anchor" href="#json-stringify-json-parse" aria-hidden="true">#</a> JSON.stringify JSON.parse</h4><p>微信小程序中由于对象中会有文字，有些文字是包含特殊字符的 比如&#39;\\n&#39; stringify之后再转parse回报错 解决方式： 1：需要保证对象中没有\\n 2：或者先 decodeURIComponent 再 encodeURIComponent</p><h4 id="关于wx-canvastotempfilepath" tabindex="-1"><a class="header-anchor" href="#关于wx-canvastotempfilepath" aria-hidden="true">#</a> 关于wx.canvasToTempFilePath</h4><p>使用 Canvas 绘图成功后，直接调用该方法生成图片，在IDE上没有问题，但在真机上会出现生成的图片不完整的情况，可以使用一个setTimeout来解决这个问题。 this.ctx.draw(false, () =&gt; { setTimeout(() =&gt; { Taro.canvasToTempFilePath({ canvasId: &#39;canvasid&#39;, success: async(res) =&gt; { this.props.onSavePoster(res.tempFilePath)//回调事件 // 清空画布 this.ctx.clearRect(0, 0, canvas_width, canvas_height) }, fail: (err) =&gt; { console.log(err) } }, this.$scope) }, time) })</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h4><blockquote><p>参考： https://juejin.cn/post/6844904192784465933</p></blockquote>',17),r={render:function(a,e){const n=(0,s.up)("Gitalk");return(0,s.wg)(),(0,s.j4)(s.HY,null,[t,(0,s.Wm)(n)],64)}}}}]);